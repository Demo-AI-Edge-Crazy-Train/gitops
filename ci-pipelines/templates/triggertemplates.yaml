apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: buildah-multiarch
  namespace: {{ .Values.namespace | quote }}
spec:
  params:
  - name: name
  - name: git-url
  - name: git-revision
  - name: image-name
  - name: context-dir
  - name: containerfile-path
  resourcetemplates:
  - apiVersion: tekton.dev/v1
    kind: PipelineRun
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Prune=false
      generateName: $(tt.params.name)-
    spec:
      pipelineRef:
        name: buildah-multiarch
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: image-name
        value: $(tt.params.image-name)
      - name: context-dir
        value: $(tt.params.context-dir)
      - name: containerfile-path
        value: $(tt.params.containerfile-path)
      workspaces:
      - name: oci-images
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 10Gi
      - name: source-workspace
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 1Gi
      - name: registry-token
        secret:
          secretName: quay-authentication
      taskRunSpecs:
      - pipelineTaskName: build-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: build-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
      taskRunTemplate:
        serviceAccountName: buildbot
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: buildah-aarch64
  namespace: {{ .Values.namespace | quote }}
spec:
  params:
  - name: name
  - name: git-url
  - name: git-revision
  - name: image-name
  - name: context-dir
  - name: containerfile-path
  resourcetemplates:
  - apiVersion: tekton.dev/v1
    kind: PipelineRun
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Prune=false
      generateName: $(tt.params.name)-
    spec:
      pipelineRef:
        name: buildah-aarch64
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: image-name
        value: $(tt.params.image-name)
      - name: context-dir
        value: $(tt.params.context-dir)
      - name: containerfile-path
        value: $(tt.params.containerfile-path)
      workspaces:
      - name: oci-images
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 10Gi
      - name: source-workspace
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 1Gi
      - name: registry-token
        secret:
          secretName: quay-authentication
      taskRunSpecs:
      - pipelineTaskName: build-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
      taskRunTemplate:
        serviceAccountName: buildbot
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: nodejs-multiarch
  namespace: {{ .Values.namespace | quote }}
spec:
  params:
  - name: name
  - name: git-url
  - name: git-revision
  - name: image-name
  - name: context-dir
  - name: containerfile-path
  resourcetemplates:
  - apiVersion: tekton.dev/v1
    kind: PipelineRun
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Prune=false
      generateName: $(tt.params.name)-
    spec:
      pipelineRef:
        name: nodejs-multiarch
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: image-name
        value: $(tt.params.image-name)
      - name: context-dir
        value: $(tt.params.context-dir)
      - name: containerfile-path
        value: $(tt.params.containerfile-path)
      workspaces:
      - name: oci-images
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 10Gi
      - name: source-workspace
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 1Gi
      - name: registry-token
        secret:
          secretName: quay-authentication
      taskRunSpecs:
      - pipelineTaskName: npm-install-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: npm-install-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
      - pipelineTaskName: build-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: build-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
      taskRunTemplate:
        serviceAccountName: buildbot
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: quarkus-multiarch
  namespace: {{ .Values.namespace | quote }}
spec:
  params:
  - name: name
  - name: git-url
  - name: git-revision
  - name: image-name
  - name: context-dir
  - name: containerfile-path
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Prune=false
      generateName: $(tt.params.name)-
    spec:
      serviceAccountName: buildbot
      pipelineRef:
        name: nodejs-multiarch
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: image-name
        value: $(tt.params.image-name)
      - name: context-dir
        value: $(tt.params.context-dir)
      - name: containerfile-path
        value: $(tt.params.containerfile-path)
      workspaces:
      - name: oci-images
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 10Gi
      - name: sources
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 1Gi
      - name: registry-token
        secret:
          secretName: quay-authentication
      - name: maven-settings
        emptyDir: {}
      taskRunTemplate:
        serviceAccountName: buildbot
      taskRunSpecs:
      - pipelineTaskName: maven-package-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: maven-package-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
      - pipelineTaskName: build-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: build-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: quarkus-multiarch-with-redhat-repo
  namespace: {{ .Values.namespace | quote }}
spec:
  params:
  - name: name
  - name: git-url
  - name: git-revision
  - name: image-name
  - name: context-dir
  - name: containerfile-path
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Prune=false
      generateName: $(tt.params.name)-
    spec:
      serviceAccountName: buildbot
      pipelineRef:
        name: nodejs-multiarch
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: image-name
        value: $(tt.params.image-name)
      - name: context-dir
        value: $(tt.params.context-dir)
      - name: containerfile-path
        value: $(tt.params.containerfile-path)
      workspaces:
      - name: oci-images
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 10Gi
      - name: sources
        volumeClaimTemplate:
          spec:
            storageClassName: {{ .Values.tektonPipelines.workspaces.storageClassName | quote }}
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 1Gi
      - name: registry-token
        secret:
          secretName: quay-authentication
      - name: maven-settings
        configMap:
          name: maven-settings
      taskRunTemplate:
        serviceAccountName: buildbot
      taskRunSpecs:
      - pipelineTaskName: maven-package-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: maven-package-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
      - pipelineTaskName: build-x86-64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: amd64
      - pipelineTaskName: build-aarch64
        podTemplate:
          nodeSelector:
            beta.kubernetes.io/arch: arm64
