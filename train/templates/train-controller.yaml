apiVersion: v1
kind: ConfigMap
metadata:
  name: train-controller-env
  namespace: {{ .Values.global.namespace | quote }}
data:
  NOBLE_USE_BLUEZ_WITH_DBUS: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: train-controller
    app.kubernetes.io/component: train-controller
    app.kubernetes.io/instance: train-controller
    app.kubernetes.io/name: train-controller
    app.kubernetes.io/part-of: train
  name: train-controller
  namespace: {{ .Values.global.namespace | quote }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: train-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: train-controller
        deployment: train-controller
    spec:
      containers:
      - image: {{ template "trainController.image" . }}
        imagePullPolicy: {{ .Values.trainController.image.pullPolicy | quote }}
        name: train-controller
        envFrom:
        - configMapRef:
            name: train-controller-env
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: dbus
          mountPath: /var/run/dbus
      volumes:
      - name: dbus
        hostPath:
          path: /var/run/dbus
      tolerations:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      serviceAccountName: train
      serviceAccount: train
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

